@using Microsoft.AspNetCore.Identity
@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    var pfpName = user?.PfpName;
    string pfpUrl = !string.IsNullOrEmpty(pfpName)
        ? $"~/img/pfps/{pfpName}"
        : "~/img/pfps/default-pfp.png";
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                <img src="@Url.Content(pfpUrl)"
                     class="rounded-circle"
                     style="width: 30px; height: 30px; object-fit: cover;"
                     alt="Profile" />
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Manage Profile</a></li>
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
    }
</ul>